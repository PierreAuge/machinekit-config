# ##############################################################################
# HAL file for BeagleBone + CRAMPS + 6 Steppers                                #
# This is a 6 Joint configuration with two parallel driven gantries.           #
# Derived from BeBoPr, CRAMPS and COMET.hal                                    #
# Re-Written by Pierre Auge                                                    #
# https://gitlab.com/pierreauge/My_3D_Printers.git                             #
# ##############################################################################

# Launch the setup script to make sure hardware setup looks good

loadusr -w ./setup.sh

################################################################################
# kinematics                                                                   #
# http://www.machinekit.io/docs/man/man9/kins/                                 #
################################################################################
loadrt trivkins    # Trivial Linear Kinematics Model


################################################################################
# See INI file for further configuration details                               #
# trajectory planner                                                           #
################################################################################
loadrt tp

################################################################################
# loads motmod http://linuxcnc.org/docs/html/man/man9/motion.9.html            #
################################################################################
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES tp=tp kins=trivkins

################################################################################
# load low-level drivers                                                       #
#
################################################################################
#                          Beaglebone GPIO Driver                              #
################################################################################
loadrt hal_bb_gpio output_pins=816,822,823,824,825,826,914,923,925 input_pins=807,808,809,810,817,911,913

################################################################################
#                       Beaglebone PRU Generic Driver                          #
################################################################################
loadrt [PRUCONF](DRIVER) prucode=$(HAL_RTMOD_DIR)/[PRUCONF](PRUBIN) [PRUCONF](CONFIG) halname=hpg

################################################################################
#                                 PID Control                                  #
################################################################################
loadrt pid count=2

################################################################################
# Gantry Config                                                                #
################################################################################
newinst gantry gantryX.0 pincount=2
newinst gantry gantryY.0 pincount=2

################################################################################
# See http://linuxcnc.org/docs/html/man/man9/limit1.9.html                     #
################################################################################
loadrt limit1 count=2

################################################################################
# Python user-mode HAL module to read ADC value and generate a thermostat      #
# output for PWM                                                               #
# c = analog input channel and thermistor table                                #
################################################################################
loadusr -Wn Therm hal_temp_bbb -n Therm -c 04:epcos_B57560G1104,05:epcos_B57560G1104 -b CRAMPS

# ##############################################################################
#                                  THREADS                                     #
#                                                                              #
################################################################################

addf hpg.capture-position                   servo-thread
addf bb_gpio.read                           servo-thread
addf bb_gpio.write                          servo-thread
addf motion-command-handler                 servo-thread
addf motion-controller                      servo-thread
addf pid.0.do-pid-calcs                     servo-thread
addf pid.1.do-pid-calcs                     servo-thread
addf limit1.0                               servo-thread
addf limit1.1                               servo-thread
addf hpg.update                             servo-thread



# ##############################################################################
#                           Motion Control Settings                            #
# ##############################################################################

################################################################################
# [0] X AXIS PARAMETERS                                                        #
################################################################################
net x1pos-cmd gantryX.0.joint.00.pos-cmd => hpg.stepgen.00.position-cmd
net x1pos-fb  gantryX.0.joint.00.pos-fb  <= hpg.stepgen.00.position-fb
net x2pos-cmd gantryX.0.joint.01.pos-cmd => hpg.stepgen.01.position-cmd
net x2pos-fb  gantryX.0.joint.01.pos-fb  <= hpg.stepgen.01.position-fb
net xpos-cmd  gantryX.0.position-cmd     <= axis.0.motor-pos-cmd
net xpos-fb   gantryX.0.position-fb      => axis.0.motor-pos-fb
net xenable axis.0.amp-enable-out => hpg.stepgen.00.enable hpg.stepgen.01.enable
setp gantryX.0.search-vel [AXIS_0]HOME_SEARCH_VEL

# x1-timing parameters #########################################################
setp hpg.stepgen.00.dirsetup        [AXIS_0]DIRSETUP
setp hpg.stepgen.00.dirhold         [AXIS_0]DIRHOLD
setp hpg.stepgen.00.steplen         [AXIS_0]STEPLEN
setp hpg.stepgen.00.stepspace       [AXIS_0]STEPSPACE
setp hpg.stepgen.00.position-scale  [AXIS_0]SCALE
setp hpg.stepgen.00.maxvel          [AXIS_0]STEPGEN_MAX_VEL
setp hpg.stepgen.00.maxaccel        [AXIS_0]STEPGEN_MAX_ACC
setp hpg.stepgen.00.steppin        813
setp hpg.stepgen.00.dirpin         812

# x2-timing parameters #########################################################
setp hpg.stepgen.01.position-scale  [AXIS_0]SCALE
setp hpg.stepgen.01.steplen         [AXIS_0]STEPLEN
setp hpg.stepgen.01.stepspace       [AXIS_0]STEPSPACE
setp hpg.stepgen.01.dirhold         [AXIS_0]DIRHOLD
setp hpg.stepgen.01.dirsetup        [AXIS_0]DIRSETUP
setp hpg.stepgen.01.maxvel          [AXIS_0]STEPGEN_MAX_VEL
setp hpg.stepgen.01.maxaccel        [AXIS_0]STEPGEN_MAX_ACC
setp hpg.stepgen.01.steppin        916
setp hpg.stepgen.01.dirpin         912



################################################################################
# [1] Y AXIS PARAMETERS                                                        #
################################################################################
net y1pos-cmd gantryY.0.joint.00.pos-cmd => hpg.stepgen.02.position-cmd
net y1pos-fb  gantryY.0.joint.00.pos-fb  <= hpg.stepgen.02.position-fb
net y2pos-cmd gantryY.0.joint.01.pos-cmd => hpg.stepgen.03.position-cmd
net y2pos-fb  gantryY.0.joint.01.pos-fb  <= hpg.stepgen.03.position-fb
net ypos-cmd  gantryY.0.position-cmd     <= axis.1.motor-pos-cmd
net ypos-fb   gantryY.0.position-fb      => axis.1.motor-pos-fb
net yenable axis.1.amp-enable-out => hpg.stepgen.02.enable hpg.stepgen.03.enable
setp gantryY.0.search-vel [AXIS_1]HOME_SEARCH_VEL

# y1-axis timing parameter #####################################################
setp hpg.stepgen.02.position-scale  [AXIS_1]SCALE
setp hpg.stepgen.02.steplen         [AXIS_1]STEPLEN
setp hpg.stepgen.02.stepspace       [AXIS_1]STEPSPACE
setp hpg.stepgen.02.dirhold         [AXIS_1]DIRHOLD
setp hpg.stepgen.02.dirsetup        [AXIS_1]DIRSETUP
setp hpg.stepgen.02.maxvel          [AXIS_1]STEPGEN_MAX_VEL
setp hpg.stepgen.02.maxaccel        [AXIS_1]STEPGEN_MAX_ACC
setp hpg.stepgen.02.steppin        815
setp hpg.stepgen.02.dirpin         814

# y2-axis timing parameter #####################################################
setp hpg.stepgen.03.position-scale  [AXIS_1]SCALE
setp hpg.stepgen.03.steplen         [AXIS_1]STEPLEN
setp hpg.stepgen.03.stepspace       [AXIS_1]STEPSPACE
setp hpg.stepgen.03.dirhold         [AXIS_1]DIRHOLD
setp hpg.stepgen.03.dirsetup        [AXIS_1]DIRSETUP
setp hpg.stepgen.03.maxvel          [AXIS_1]STEPGEN_MAX_VEL
setp hpg.stepgen.03.maxaccel        [AXIS_1]STEPGEN_MAX_ACC
setp hpg.stepgen.03.steppin        917
setp hpg.stepgen.03.dirpin         918



################################################################################
# [2] Z AXIS PARAMETERS                                                        #
################################################################################
setp hpg.stepgen.04.position-scale  [AXIS_2]SCALE
setp hpg.stepgen.04.steplen         [AXIS_2]STEPLEN
setp hpg.stepgen.04.stepspace       [AXIS_2]STEPSPACE
setp hpg.stepgen.04.dirhold         [AXIS_2]DIRHOLD
setp hpg.stepgen.04.dirsetup        [AXIS_2]DIRSETUP
setp hpg.stepgen.04.maxvel          [AXIS_2]STEPGEN_MAX_VEL
setp hpg.stepgen.04.maxaccel        [AXIS_2]STEPGEN_MAX_ACC
net  zpos-cmd 	axis.2.motor-pos-cmd 		=> hpg.stepgen.04.position-cmd
net  zpos-fb 	hpg.stepgen.04.position-fb 	=> axis.2.motor-pos-fb
net  zenable 	axis.2.amp-enable-out 		=> hpg.stepgen.04.enable

setp hpg.stepgen.04.steppin         819
setp hpg.stepgen.04.dirpin          818


# ##############################################################################
# [3] A AXIS (EXTRUDER) E02 ON CRAMPS BOARD                                    #
# EXTRUDER AXIS PARAMETERS                                                     #
################################################################################
setp hpg.stepgen.05.position-scale  [AXIS_3]SCALE
setp hpg.stepgen.05.steplen         [AXIS_3]STEPLEN
setp hpg.stepgen.05.stepspace       [AXIS_3]STEPSPACE
setp hpg.stepgen.05.dirhold         [AXIS_3]DIRHOLD
setp hpg.stepgen.05.dirsetup        [AXIS_3]DIRSETUP
setp hpg.stepgen.05.maxvel          [AXIS_3]STEPGEN_MAX_VEL
setp hpg.stepgen.05.maxaccel        [AXIS_3]STEPGEN_MAX_ACC

net Epos-cmd 	axis.3.motor-pos-cmd 		=> hpg.stepgen.05.position-cmd
net Epos-fb 	hpg.stepgen.05.position-fb 	=> axis.3.motor-pos-fb
net Eenable 	axis.3.amp-enable-out 		=> hpg.stepgen.05.enable

setp hpg.stepgen.05.steppin         924
setp hpg.stepgen.05.dirpin          926


# ##############################################################################
# Standard I/O - EStop, Enables, Limit Switches, Etc                           #
# ##############################################################################

# Create estop signal chain
# Drive software estop to hardware
net estop-out iocontrol.0.user-enable-out => bb_gpio.p8.out-26
setp bb_gpio.p8.out-26.invert 1

# Monitor estop input from hardware
net estop-loop bb_gpio.p8.in-17 => iocontrol.0.emc-enable-in
setp bb_gpio.p8.in-17.invert 1

# create signals for tool loading loopback
net tool-prep-loop iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
net tool-change-loop iocontrol.0.tool-change => iocontrol.0.tool-changed

# Axis enable signal (active low)
net emcmot.00.enable => bb_gpio.p9.out-14
setp bb_gpio.p9.out-14.invert 1

# Machine power
# Use halui.machine.is-on instead?
net emcmot.00.enable => bb_gpio.p9.out-23

# Tie machine power signal to the CRAMPS LED
# Feel free to tie any other signal you like to the LED
net emcmot.00.enable => bb_gpio.p9.out-25

################################################################################
###                       X AXIS GANTRY LIMITS                               ###
################################################################################
# debounce the X-axis switches and connect them to signals
net switches-x1 	   <= bb_gpio.p8.in-08
net switches-x2 	   <= bb_gpio.p8.in-07

# join the home switch signals so that both switches have to be closed to trigger a home position
net switches-x1		   => gantryX.0.joint.00.home
net switches-x2		   => gantryX.0.joint.01.home
net home-x 		       <= gantryX.0.home
net home-x 		       => axis.0.home-sw-in
net limit-x		       <= gantryX.0.limit
net limit-x		       => axis.0.neg-lim-sw-in

################################################################################
###                       Y AXIS GANTRY LIMITS                               ###
################################################################################
# debounce the y-axis switches and connect them to signals
net switches-y1 	   <= bb_gpio.p8.in-10
net switches-y2 	   <= bb_gpio.p8.in-09

# join the home switch signals so that both switches have to be closed to trigger a home position
net switches-y1		   => gantryY.0.joint.00.home
net switches-y2		   => gantryY.0.joint.01.home
net home-y 		       <= gantryY.0.home
net home-y 		       => axis.1.home-sw-in
net limit-y		       <= gantryY.0.limit
net limit-y		       => axis.1.neg-lim-sw-in

################################################################################
###                         Z  AXIS LIMITS                                   ###
################################################################################

net limit-z-min         <= bb_gpio.p9.in-13
net both-home-z-max     <= bb_gpio.p9.in-11
net both-home-z-max		=> axis.2.pos-lim-sw-in
net limit-z-min         => axis.2.neg-lim-sw-in
net both-home-z-max     => axis.2.home-sw-in

# Adjust as needed for your switch polarity
setp bb_gpio.p8.in-08.invert 1
setp bb_gpio.p8.in-07.invert 1
setp bb_gpio.p8.in-10.invert 1
setp bb_gpio.p8.in-09.invert 1
setp bb_gpio.p9.in-11.invert 1
setp bb_gpio.p9.in-13.invert 1

# Old config, left here just for reference
# Uncomment if you actually have limit switches setup
# You probably want to setup homing in the INI file, as well
#net limit-x-min => axis.0.home-sw-in
#net limit-x-min => axis.0.neg-lim-sw-in
#net limit-x-max => axis.0.pos-lim-sw-in
#net limit-y-min => axis.1.home-sw-in
#net limit-y-min => axis.1.neg-lim-sw-in
#net limit-y-max => axis.1.pos-lim-sw-in
#net limit-z-min => axis.2.home-sw-in
#net limit-z-min => axis.2.neg-lim-sw-in
#net limit-z-max => axis.2.pos-lim-sw-in

# ##############################################################################
#                                  Servo signals                               #
# ##############################################################################

# There is currently no driver to generate pulses for actual
# radio-control style servos, but the buffered 5V output
# signals can be used as GPIO

# !!! WARNING !!!
# BBB on-board eMMC *MUST* be disabled in order to use these!
# Drive eMMC-disabled signal high to enable signals that overlap
# with the eMMC pins on P8, otherwise they are tri-stated
#
# You also need to edit the setup.sh file to enable the GPIO pins

# Signal the hardware that eMMC has been disabled and it is safe
# to drive the signals connected to eMMC lines (active low)
newsig eMMC-disabled bit
sets eMMC-disabled 0
net eMMC-disabled bb_gpio.p8.out-16
setp bb_gpio.p8.out-16.invert 1

# Servo signals, output only, driven by an 'ACT125

newsig servo.1 bit
newsig servo.2 bit
newsig servo.3 bit
newsig servo.4 bit

sets servo.1 0
sets servo.2 0
sets servo.3 0
sets servo.4 0

net servo.1 bb_gpio.p8.out-25
net servo.2 bb_gpio.p8.out-24
net servo.3 bb_gpio.p8.out-23
net servo.4 bb_gpio.p8.out-22


# ##############################################################################
# PWM and Temperature Signals                                                  #
# ##############################################################################

# Define signals to use elsewhere (ie: M1xx codes)
# If you change any names here, lots of things will break!
newsig e0.temp.set   float
newsig e0.temp.meas  float
newsig bed.temp.set  float
newsig bed.temp.meas float


setp hpg.pwmgen.00.pwm_period       10000000

# Bed Heater FET 1
setp hpg.pwmgen.00.out.00.pin       811
setp hpg.pwmgen.00.out.00.enable    1
setp hpg.pwmgen.00.out.00.value     0.0

# E0 Heater FET 2
setp hpg.pwmgen.00.out.01.pin       915
setp hpg.pwmgen.00.out.01.enable    1
setp hpg.pwmgen.00.out.01.value     0.0

# E1 Heater FET 3
setp hpg.pwmgen.00.out.02.pin       927
setp hpg.pwmgen.00.out.02.enable    1
setp hpg.pwmgen.00.out.02.value     0.0

# E2 Heater FET 4
setp hpg.pwmgen.00.out.03.pin       921
setp hpg.pwmgen.00.out.03.enable    1
setp hpg.pwmgen.00.out.03.value     0.0

# FET 5 - Fan / LED
setp hpg.pwmgen.00.out.04.pin       941
setp hpg.pwmgen.00.out.04.enable    1
setp hpg.pwmgen.00.out.04.value     0.0

# FET 6 - Fan / LED
setp hpg.pwmgen.00.out.05.pin       922
setp hpg.pwmgen.00.out.05.enable    1
setp hpg.pwmgen.00.out.05.value     0.0

# PID for Extruder 0 temperature control
net e0.temp.meas    <= Therm.ch-04.value
net e0.temp.meas    => pid.0.feedback

sets e0.temp.set  0
net e0.temp.set     => pid.0.command

net e0.heater  <= pid.0.output
net e0.heater  => limit1.0.in
net e0.heaterl <= limit1.0.out
net e0.heaterl => hpg.pwmgen.00.out.01.value

# Limit heater PWM to positive values
# PWM mimics hm2 implementation, which generates output for negative values
setp limit1.0.min 0

# PID for Bed temperature control
net bed.temp.meas    <= Therm.ch-05.value
net bed.temp.meas    => pid.1.feedback

sets bed.temp.set  0
net bed.temp.set     => pid.1.command

net bed.heater  <= pid.1.output
net bed.heater  => limit1.1.in
net bed.heaterl <= limit1.1.out
net bed.heaterl => hpg.pwmgen.00.out.00.value

# Limit heater PWM to positive values
# PWM mimics hm2 implementation, which generates output for negative values
setp limit1.1.min 0

# PID Parameters for adjusting temperature control
# Extruder
#setp pid.0.FF0      0
#setp pid.0.FF1      0
#setp pid.0.FF2      0
setp pid.0.Pgain  0.30
setp pid.0.Igain  0.00001
setp pid.0.Dgain  0.9375
setp pid.0.maxerrorI 1.0
setp pid.0.bias    0.5
setp pid.0.enable   1

# Bed
#setp pid.1.FF0      0
#setp pid.1.FF1      0
#setp pid.1.FF2      0
setp pid.1.Pgain  1
setp pid.1.Igain  0.0
setp pid.1.Dgain  0.0
setp pid.1.maxerrorI 1.0
setp pid.1.bias    0.5
setp pid.1.enable   1
